version: '3.8'
services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "7000:80"
      - "443:443"
    volumes:
      - ./docker/nginx.default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/app:delegated
    depends_on:
      - app
    networks:
      - laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravelapp:latest
    container_name: laravelapp
    restart: unless-stopped
    working_dir: /var/www/app
    expose:
      - "9000"
    volumes:
      - ./:/var/www/app
      - ./.env.docker:/var/www/app/.env
    networks:
      - laravel
  db:
    image: mysql:8.3
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: challenge
      # MYSQL_USER: root
      MYSQL_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD:
    volumes:
      - /dbdata:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - laravel
  npm:
    image: node:20
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www/app
      - ./.env.docker:/var/www/app/.env
      - ./node_modules:/var/www/app/node_modules
    working_dir: /var/www/app
    entrypoint: ["sh", "-c"]
    command: ["npm install && npm run watch"]
    networks:
      - laravel
networks:
  laravel:
    name: laravel
    driver: bridge

volumes:
  dbdata:
    driver: local